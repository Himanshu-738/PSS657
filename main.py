import uuid
from agents.flow import run_flow
from utils.otp import generate_otp, validate_otp, prompt_for_otp
from utils.orchestrator import prepare_payload, push_to_core, log_transaction
from utils.input_utils import safe_input

if __name__ == "__main__":
    user_id = str(uuid.uuid4())
    collected = {}  # responses storage

    print("ЁЯСЛ Welcome to Loan Onboarding Agent!")
    print("ЁЯМР Please select your language / рдХреГрдкрдпрд╛ рдЕрдкрдиреА рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ:")
    print("1. English")
    print("2. рд╣рд┐рдВрджреА (Hindi)")

    # Correct call to safe_input
    choice = safe_input("> ", user_id, collected, lang="en")
    lang = "hi" if choice.strip() == "2" else "en"

    # OTP Verification
    otp = generate_otp(user_id)
    entered = prompt_for_otp(user_id, lang)

    if not validate_otp(user_id, entered, lang):
        msg = "тЭМ OTP invalid. Exiting." if lang == "en" else "тЭМ OTP рдЕрдорд╛рдиреНрдп рд╣реИред рдмрд╛рд╣рд░ рдирд┐рдХрд▓рд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИред"
        print(msg)
        exit()

    print("тЬЕ OTP verified successfully!\n" if lang == "en" else "тЬЕ OTP рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рддреНрдпрд╛рдкрд┐рдд!\n")

    # Run Onboarding Flow
    collected = run_flow(user_id, lang=lang)

    # Prepare payload and push to core
    payload = prepare_payload(collected)
    core_resp = push_to_core(payload)
    tx_doc = log_transaction(user_id, payload, core_resp)

    print("\nЁЯОЙ Final Payload submitted (simulated)." if lang=="en" else "\nЁЯОЙ рдЕрдВрддрд┐рдо рдбреЗрдЯрд╛ (рдкреЗрд▓реЛрдб) рд╕рдмрдорд┐рдЯ рдХрд┐рдпрд╛ рдЧрдпрд╛ред")
    print(core_resp)
    print("\nЁЯЧДя╕П Transaction logged with ID (Mongo):", tx_doc.get("_id"))
    